package routes/companions
  use com/teacode/jetx
  use com/teacode/json
  use com/teacode/json/v2
  use com/teacode/data

  use model
  use utils

def createOne( companion: v2/Object! ) = data/w: {
  fix id = model/saveCompanion( companion )

  jetx/out: json"{
    "payload": #{id}
  }"
}

def getAll = data/w: jetx/out: {
  json"{
    "payload": [#{model/getCompanions.*utils/companionsToJson}]
  }"
}

def updateOne( id: Int!, companion: v2/Object! ) = data/w: {
  model/updateCompanion( id, companion )

  jetx/out: json"{
    "payload": null
  }"
}

def index_( method: String!, companion: String! ) = {
  if( method == 'POST ) createOne( companion.json/parseObject )
  else if( method == 'GET ) getAll
}

def current( method: String!, companion: String!, id: Int! ) = {
  if( method == 'PUT ) updateOne( id, companion.json/parseObject )
}