package routes/events
  use com/teacode/jetx
  use com/teacode/json
  use com/teacode/json/v2
  use com/teacode/data

  use model
  use utils

def createOne( event: v2/Object! ) = data/w: {
  fix id = model/saveEvent( event )

  jetx/out: json"{
    "payload": #{id}
  }"
}

def getAll = data/w: jetx/out: json"{
  "payload": [#{model/getEvents.*utils/eventsToJson}]
}"

def getOne( id: Int! ) = data/w: {
  fix event = model/getEvent( id )
  var payload: v2/Object?

  if( event.keys.*size == 0 ) payload = json"{ "payload": null }"
  else payload = json"{
    "payload": #{event.*utils/eventToJson}
  }"

  jetx/out: payload
}

def updateOne( id: Int!, event: v2/Object! ) = data/w: {
  model/updateEvent( id, event )

  jetx/out: json"{
    "payload": null
  }"
}

def index_( method: String!, event: String! ) = {
  if( method == 'POST ) createOne( event.json/parseObject )
  else if( method == 'GET ) getAll
}

def current( method: String!, event: String!, id: Int! ) = {
  if( method == 'GET ) getOne( id )
  else if( method == 'PUT ) updateOne( id, event.json/parseObject )
}