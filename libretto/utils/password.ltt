package utils/password
  use libretto/util

def Int s64 = {
  var tmp = this
  var res:Int*
  while(tmp > 0): {
    res += tmp mod 64
    tmp = tmp div 64
  }
  res.{
    case x if x < 26 => x + 0x41
    case x if x < 52 => x + 0x61 - 26
    case x if x < 62 => x + 0x30 - 52
    case 62 => 0x2b
    case 63 => 0x2f
  }.*util/newString
}

def globalSalt = "654w36tg543"

def genSalt(width: Int!): String! = util/newString:
  (1..width).{util/rnd.nextInt(0x7f - 0x20) + 0x20} // ascii printable characters

struct Password(salt:String!, hash:String!)

def Password is(realPass:String!) = this.hash == (globalSalt + this.salt + realPass).util/sha2.s64

def Password string = <<Password(...)>>

def password(realPass:String!) = genSalt(64) as salt.
  Password(salt): (globalSalt + salt + realPass).util/sha2.s64